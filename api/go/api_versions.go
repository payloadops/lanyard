// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Payload Ops API
 *
 * The Payload Ops API streamlines management of AI prompts, projects, organizations, teams, and users through conventional HTTP requests. This platform enables efficient automation and control of resources, providing robust tools for developers to manage settings, memberships, and activities seamlessly.
 *
 * API version: 1.0
 * Contact: info@payloadops.com
 */

package openapi

import (
	"net/http"
	"strings"

	"github.com/go-chi/chi/v5"
)

// VersionsAPIController binds http requests to an api service and writes the service results to the http response
type VersionsAPIController struct {
	service VersionsAPIServicer
	errorHandler ErrorHandler
}

// VersionsAPIOption for how the controller is set up.
type VersionsAPIOption func(*VersionsAPIController)

// WithVersionsAPIErrorHandler inject ErrorHandler into controller
func WithVersionsAPIErrorHandler(h ErrorHandler) VersionsAPIOption {
	return func(c *VersionsAPIController) {
		c.errorHandler = h
	}
}

// NewVersionsAPIController creates a default api controller
func NewVersionsAPIController(s VersionsAPIServicer, opts ...VersionsAPIOption) Router {
	controller := &VersionsAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the VersionsAPIController
func (c *VersionsAPIController) Routes() Routes {
	return Routes{
		"GetPromptVersion": Route{
			strings.ToUpper("Get"),
			"/v1/prompts/{promptId}/versions/{versionId}",
			c.GetPromptVersion,
		},
		"ListPromptVersions": Route{
			strings.ToUpper("Get"),
			"/v1/prompts/{promptId}/versions",
			c.ListPromptVersions,
		},
	}
}

// GetPromptVersion - Retrieve a specific version or the latest version of a prompt
func (c *VersionsAPIController) GetPromptVersion(w http.ResponseWriter, r *http.Request) {
	promptIdParam := chi.URLParam(r, "promptId")
	if promptIdParam == "" {
		c.errorHandler(w, r, &RequiredError{"promptId"}, nil)
		return
	}
	versionIdParam := chi.URLParam(r, "versionId")
	if versionIdParam == "" {
		c.errorHandler(w, r, &RequiredError{"versionId"}, nil)
		return
	}
	result, err := c.service.GetPromptVersion(r.Context(), promptIdParam, versionIdParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}

// ListPromptVersions - List all versions of a specific prompt
func (c *VersionsAPIController) ListPromptVersions(w http.ResponseWriter, r *http.Request) {
	promptIdParam := chi.URLParam(r, "promptId")
	if promptIdParam == "" {
		c.errorHandler(w, r, &RequiredError{"promptId"}, nil)
		return
	}
	result, err := c.service.ListPromptVersions(r.Context(), promptIdParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	EncodeJSONResponse(result.Body, &result.Code, w)
}
