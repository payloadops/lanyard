// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Payload Ops API
 *
 * The Payload Ops API streamlines management of AI prompts, projects, organizations, teams, and users through conventional HTTP requests. This platform enables efficient automation and control of resources, providing robust tools for developers to manage settings, memberships, and activities seamlessly.
 *
 * API version: 1.0
 * Contact: info@payloadops.com
 */

package service

import (
	"context"
	"github.com/payloadops/plato/api/openapi"
	"net/http"
	"errors"
)

// PromptsAPIService is a service that implements the logic for the PromptsAPIServicer
// This service should implement the business logic for every endpoint for the PromptsAPI API.
// Include any external packages or services that will be required by this service.
type PromptsAPIService struct {
}

// NewPromptsAPIService creates a default api service
func NewPromptsAPIService() openapi.PromptsAPIServicer {
	return &PromptsAPIService{}
}

// CreatePrompt - Create a new prompt in a project
func (s *PromptsAPIService) CreatePrompt(ctx context.Context, projectId string, promptInput openapi.PromptInput) (openapi.ImplResponse, error) {
	// TODO - update CreatePrompt with the required logic for this service method.
	// Add api_prompts_service.openapi to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, Prompt{}) or use other options such as http.Ok ...
	// return Response(201, Prompt{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return openapi.Response(http.StatusNotImplemented, nil), errors.New("CreatePrompt method not implemented")
}

// DeletePrompt - Delete a specific prompt from a project
func (s *PromptsAPIService) DeletePrompt(ctx context.Context, projectId string, promptId string) (openapi.ImplResponse, error) {
	// TODO - update DeletePrompt with the required logic for this service method.
	// Add api_prompts_service.openapi to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return openapi.Response(http.StatusNotImplemented, nil), errors.New("DeletePrompt method not implemented")
}

// GetPrompt - Retrieve a specific prompt within a project
func (s *PromptsAPIService) GetPrompt(ctx context.Context, projectId string, promptId string) (openapi.ImplResponse, error) {
	// TODO - update GetPrompt with the required logic for this service method.
	// Add api_prompts_service.openapi to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Prompt{}) or use other options such as http.Ok ...
	// return Response(200, Prompt{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return openapi.Response(http.StatusNotImplemented, nil), errors.New("GetPrompt method not implemented")
}

// ListPrompts - List all prompts in a project
func (s *PromptsAPIService) ListPrompts(ctx context.Context, projectId string) (openapi.ImplResponse, error) {
	// TODO - update ListPrompts with the required logic for this service method.
	// Add api_prompts_service.openapi to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []Prompt{}) or use other options such as http.Ok ...
	// return Response(200, []Prompt{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return openapi.Response(http.StatusNotImplemented, nil), errors.New("ListPrompts method not implemented")
}

// UpdatePrompt - Update a specific prompt in a project
func (s *PromptsAPIService) UpdatePrompt(ctx context.Context, projectId string, promptId string, promptInput openapi.PromptInput) (openapi.ImplResponse, error) {
	// TODO - update UpdatePrompt with the required logic for this service method.
	// Add api_prompts_service.openapi to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Prompt{}) or use other options such as http.Ok ...
	// return Response(200, Prompt{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return openapi.Response(http.StatusNotImplemented, nil), errors.New("UpdatePrompt method not implemented")
}
