// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Payload Ops API
 *
 * The Payload Ops API streamlines management of AI prompts, projects, organizations, teams, and users through conventional HTTP requests. This platform enables efficient automation and control of resources, providing robust tools for developers to manage settings, memberships, and activities seamlessly.
 *
 * API version: 1.0
 * Contact: info@payloadops.com
 */

package service

import (
	"context"
	"github.com/payloadops/plato/api/openapi"
	"net/http"
	"errors"
)

// OrganizationsAPIService is a service that implements the logic for the OrganizationsAPIServicer
// This service should implement the business logic for every endpoint for the OrganizationsAPI API.
// Include any external packages or services that will be required by this service.
type OrganizationsAPIService struct {
}

// NewOrganizationsAPIService creates a default api service
func NewOrganizationsAPIService() openapi.OrganizationsAPIServicer {
	return &OrganizationsAPIService{}
}

// CreateOrganization - Create a new organization
func (s *OrganizationsAPIService) CreateOrganization(ctx context.Context, organizationInput openapi.OrganizationInput) (openapi.ImplResponse, error) {
	// TODO - update CreateOrganization with the required logic for this service method.
	// Add api_organizations_service.openapi to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, Organization{}) or use other options such as http.Ok ...
	// return Response(201, Organization{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return openapi.Response(http.StatusNotImplemented, nil), errors.New("CreateOrganization method not implemented")
}

// DeleteOrganization - Delete a specific organization
func (s *OrganizationsAPIService) DeleteOrganization(ctx context.Context, orgId string) (openapi.ImplResponse, error) {
	// TODO - update DeleteOrganization with the required logic for this service method.
	// Add api_organizations_service.openapi to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return openapi.Response(http.StatusNotImplemented, nil), errors.New("DeleteOrganization method not implemented")
}

// GetOrganization - Get a specific organization
func (s *OrganizationsAPIService) GetOrganization(ctx context.Context, orgId string) (openapi.ImplResponse, error) {
	// TODO - update GetOrganization with the required logic for this service method.
	// Add api_organizations_service.openapi to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Organization{}) or use other options such as http.Ok ...
	// return Response(200, Organization{}), nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return openapi.Response(http.StatusNotImplemented, nil), errors.New("GetOrganization method not implemented")
}

// ListOrganizations - List all organizations
func (s *OrganizationsAPIService) ListOrganizations(ctx context.Context) (openapi.ImplResponse, error) {
	// TODO - update ListOrganizations with the required logic for this service method.
	// Add api_organizations_service.openapi to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []Organization{}) or use other options such as http.Ok ...
	// return Response(200, []Organization{}), nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return openapi.Response(http.StatusNotImplemented, nil), errors.New("ListOrganizations method not implemented")
}

// UpdateOrganization - Update a specific organization
func (s *OrganizationsAPIService) UpdateOrganization(ctx context.Context, orgId string, organizationInput openapi.OrganizationInput) (openapi.ImplResponse, error) {
	// TODO - update UpdateOrganization with the required logic for this service method.
	// Add api_organizations_service.openapi to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Organization{}) or use other options such as http.Ok ...
	// return Response(200, Organization{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	// TODO: Uncomment the next line to return response Response(500, {}) or use other options such as http.Ok ...
	// return Response(500, nil),nil

	return openapi.Response(http.StatusNotImplemented, nil), errors.New("UpdateOrganization method not implemented")
}
