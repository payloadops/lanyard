// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/payloadops/plato/app/dal (interfaces: APIKeyManager)
//
// Generated by this command:
//
//	mockgen -package=mocks -destination=mocks/mock_apikey_db_client.go github.com/payloadops/plato/app/dal APIKeyManager
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	dal "github.com/payloadops/plato/api/dal"
	gomock "go.uber.org/mock/gomock"
)

// MockAPIKeyManager is a mock of APIKeyManager interface.
type MockAPIKeyManager struct {
	ctrl     *gomock.Controller
	recorder *MockAPIKeyManagerMockRecorder
}

// MockAPIKeyManagerMockRecorder is the mock recorder for MockAPIKeyManager.
type MockAPIKeyManagerMockRecorder struct {
	mock *MockAPIKeyManager
}

// NewMockAPIKeyManager creates a new mock instance.
func NewMockAPIKeyManager(ctrl *gomock.Controller) *MockAPIKeyManager {
	mock := &MockAPIKeyManager{ctrl: ctrl}
	mock.recorder = &MockAPIKeyManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAPIKeyManager) EXPECT() *MockAPIKeyManagerMockRecorder {
	return m.recorder
}

// CreateAPIKey mocks base method.
func (m *MockAPIKeyManager) CreateAPIKey(arg0 context.Context, arg1 dal.APIKey) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAPIKey", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateAPIKey indicates an expected call of CreateAPIKey.
func (mr *MockAPIKeyManagerMockRecorder) CreateAPIKey(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAPIKey", reflect.TypeOf((*MockAPIKeyManager)(nil).CreateAPIKey), arg0, arg1)
}

// DeleteAPIKey mocks base method.
func (m *MockAPIKeyManager) DeleteAPIKey(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteAPIKey", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteAPIKey indicates an expected call of DeleteAPIKey.
func (mr *MockAPIKeyManagerMockRecorder) DeleteAPIKey(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteAPIKey", reflect.TypeOf((*MockAPIKeyManager)(nil).DeleteAPIKey), arg0, arg1)
}

// GetAPIKey mocks base method.
func (m *MockAPIKeyManager) GetAPIKey(arg0 context.Context, arg1 string) (*dal.APIKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAPIKey", arg0, arg1)
	ret0, _ := ret[0].(*dal.APIKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAPIKey indicates an expected call of GetAPIKey.
func (mr *MockAPIKeyManagerMockRecorder) GetAPIKey(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAPIKey", reflect.TypeOf((*MockAPIKeyManager)(nil).GetAPIKey), arg0, arg1)
}

// ListAPIKeys mocks base method.
func (m *MockAPIKeyManager) ListAPIKeys(arg0 context.Context, arg1 string) ([]dal.APIKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListAPIKeys", arg0, arg1)
	ret0, _ := ret[0].([]dal.APIKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListAPIKeys indicates an expected call of ListAPIKeys.
func (mr *MockAPIKeyManagerMockRecorder) ListAPIKeys(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListAPIKeys", reflect.TypeOf((*MockAPIKeyManager)(nil).ListAPIKeys), arg0, arg1)
}

// UpdateAPIKey mocks base method.
func (m *MockAPIKeyManager) UpdateAPIKey(arg0 context.Context, arg1 dal.APIKey) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateAPIKey", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateAPIKey indicates an expected call of UpdateAPIKey.
func (mr *MockAPIKeyManagerMockRecorder) UpdateAPIKey(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateAPIKey", reflect.TypeOf((*MockAPIKeyManager)(nil).UpdateAPIKey), arg0, arg1)
}
