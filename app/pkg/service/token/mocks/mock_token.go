// Code generated by MockGen. DO NOT EDIT.
// Source: plato/app/pkg/service/token (interfaces: TokenService)
//
// Generated by this command:
//
//	mockgen -package=mocks -destination=mocks/mock_token.go plato/app/pkg/service/token TokenService
//

// Package mocks is a generated GoMock package.
package mocks

import (
	token "plato/app/pkg/service/token"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockTokenService is a mock of TokenService interface.
type MockTokenService struct {
	ctrl     *gomock.Controller
	recorder *MockTokenServiceMockRecorder
}

// MockTokenServiceMockRecorder is the mock recorder for MockTokenService.
type MockTokenServiceMockRecorder struct {
	mock *MockTokenService
}

// NewMockTokenService creates a new mock instance.
func NewMockTokenService(ctrl *gomock.Controller) *MockTokenService {
	mock := &MockTokenService{ctrl: ctrl}
	mock.recorder = &MockTokenServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenService) EXPECT() *MockTokenServiceMockRecorder {
	return m.recorder
}

// ValidateToken mocks base method.
func (m *MockTokenService) ValidateToken(arg0 string) (*token.TokenClaims, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateToken", arg0)
	ret0, _ := ret[0].(*token.TokenClaims)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateToken indicates an expected call of ValidateToken.
func (mr *MockTokenServiceMockRecorder) ValidateToken(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateToken", reflect.TypeOf((*MockTokenService)(nil).ValidateToken), arg0)
}
